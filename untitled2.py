# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U2lQYlyJjKTOrNXLtz35eO8jeboX75LJ
"""

from keras.datasets import mnist

((X_train,y_train),(X_test,y_test)) = mnist.load_data()

print(X_train)
print(X_test)
print(y_train)
print(y_test)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

X_train_d = X_train.reshape((60000,28,28,1))
X_test_d = X_test.reshape((10000,28,28,1))

from keras.utils import np_utils
y_train_ohe = np_utils.to_categorical(y_train)
y_test_ohe = np_utils.to_categorical(y_test)

from keras.models import Sequential
from keras import Input
from keras.layers import Conv2D, MaxPool2D, Flatten, Dense

model = Sequential()

model.add(Input(shape=(28,28,1)))

model.add(Conv2D(filters=30,kernel_size=(5,5),strides = (1,1),padding='valid'))

model.add(MaxPool2D(pool_size=(5,5),padding= 'valid', strides=(1,1)))

model.add(Flatten())

model.add(Dense(activation='softmax', units=10))

model.summary()

model.compile(optimizer='rmsprop',loss = 'categorical_crossentropy',metrics = 'accuracy')

result =  model.fit(X_train_d,y_train_ohe, batch_size= 128, epochs = 200, verbose= 1, validation_split=0.2)